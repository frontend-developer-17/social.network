{"version":3,"file":"static/js/884.69f0bb12.chunk.js","mappings":"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","sources":["webpack://my-app/./src/Profile/Messanger/Dialog.module.css?105e","Profile/Messanger/Dialog.jsx","Profile/Messanger/DialogContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"messages\":\"Dialog_messages__ZMbML\",\"NameMessageEl\":\"Dialog_NameMessageEl__8CQn7\",\"nameEl\":\"Dialog_nameEl__Xi7U8\",\"textarea\":\"Dialog_textarea__rq6qX\",\"active\":\"Dialog_active__lbcXa\",\"imageBlok\":\"Dialog_imageBlok__PVkB-\",\"messageBlok\":\"Dialog_messageBlok__cGwhg\",\"fileInput\":\"Dialog_fileInput__DLxF0\",\"imageFile\":\"Dialog_imageFile__O7ujU\",\"fileName\":\"Dialog_fileName__QfSDP\",\"messageBlokPost\":\"Dialog_messageBlokPost__Zde2X\"};","\r\nimport React, { useState } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport s from \"./Dialog.module.css\"\r\nimport { useForm } from 'react-hook-form';\r\nimport fileLoding from \".//../../image/fileLoading.png\"\r\nimport { useReducer } from 'react';\r\nimport MessageReduser, { UpdateNewMessageBodyCreater } from '../../Redux/MessagesReduser';\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className=\"\">\r\n            <div >{props.message}</div>\r\n        </div>\r\n    )\r\n\r\n}\r\nconst Dialog = (props) => {\r\n    return (\r\n\r\n        <div className=\"\">\r\n            <NavLink className={({ isActive }) => isActive ? s.active : ''} to={'/dialog/' + props.id} >{props.name}</NavLink>\r\n        </div>\r\n\r\n    )\r\n}\r\nconst DialogsMessage = (props) => {\r\n    const { register, handleSubmit, reset } = useForm({ mode: \"onBlur\" });\r\n    <div className=\"\">\r\n    </div>\r\n    let dialogMessageEl = props.dialogsMessages.map(m => < Message key={m.id} message={m.message} />)\r\n    let dialogesNameEl = props.dialogsName.map(d => <Dialog key={d.id} name={d.name} id={d.id} />)\r\n    const [valueMessage, setValueMessage] = useState(\"\")\r\n    const [currentFile, setCurrentFile] = useState()\r\n   const [fileImage, setfileImage] = useState()\r\n    \r\n    const [state,dispatch]= useReducer(MessageReduser,{ dialogsMessage: [\r\n          { message: \"\"}]})\r\n   \r\n    const onSubmit = (data) => {\r\n        dispatch({type:\"UpdateNewMessageBody\",text:data.post})\r\n        setValueMessage('')\r\n        reset()\r\n       \r\n        fileReader.readAsDataURL(currentFile)\r\n        fileReader.onloadend = () => {\r\n            setfileImage(fileReader.result)\r\n        }\r\n    }\r\n    const handleChange = (e) => {\r\n       const file = e.target.files[0]\r\n        setCurrentFile(file)\r\n    }\r\n    const fileReader = new FileReader\r\n    return (\r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n\r\n            <div className={s.messages}>\r\n                <div className=\"\"></div>\r\n                {fileImage ?\r\n                    <div >\r\n                        <img className={s.imageBlok} src={fileImage ? fileImage : \"\"} alt=\"\" /></div>\r\n                    :\"\"\r\n                              \r\n                }\r\n\r\n\r\n\r\n{state?state.dialogsMessage.map(d=><div>{d.message}</div>):\"\"}\r\n\r\n                <div className={s.NameMessageEl}>\r\n                    <div className=\"\">{dialogesNameEl} </div>\r\n               <div className={s.messageBlokPost}> {dialogMessageEl}</div>\r\n               \r\n                </div>\r\n               \r\n\r\n\r\n\r\n              <label for=\"fileButton\" className={s.fileLabel}>\r\n              <img className={s.imageFile} src={fileLoding} alt=\"\" />\r\n             \r\n              <input  {...register(\"post\",)} className={s.textarea} value={valueMessage} onChange={(e) => setValueMessage(e.target.value)}   ></input>\r\n              <input  type=\"submit\" value=\"Отправить\" />\r\n\r\n             \r\n</label>\r\n\r\n                <input id=\"fileButton\" className={s.fileInput} type=\"file\" onChange={handleChange} accept=\".jpg, .jpeg,.png\" />\r\n              \r\n               <div className={s.fileName}>{currentFile?  <h5>Файл загружен: {currentFile.name}</h5>:\"\"} </div>\r\n  \r\n                <div className=\"\">\r\n\r\n                </div>\r\n\r\n\r\n\r\n            </div >\r\n        </form>\r\n    )\r\n}\r\nexport default DialogsMessage","import { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport { RedirectLogin } from '../../hoc/redirect';\r\nimport {  UpdateNewMessageBodyCreater } from '../../Redux/MessagesReduser';\r\nimport DialogsMessage from './Dialog';\r\n\r\n\r\nconst mapStateToProps = (state) =>{\r\n    return { \r\n        dialogsMessages: state.messagePage.dialogsMessages,\r\n        dialogsName:state.messagePage.dialogsName,\r\n        arrayDialogMessage:state.messagePage.arrayDialogMessage\r\n\r\n    }\r\n \r\n }\r\n \r\n \r\n export default compose(\r\n    RedirectLogin,\r\n    connect(mapStateToProps,{})\r\n\r\n )(DialogsMessage)\r\n "],"names":["Message","props","className","message","Dialog","isActive","s","to","id","name","useForm","mode","register","handleSubmit","reset","dialogMessageEl","dialogsMessages","map","m","dialogesNameEl","dialogsName","d","useState","valueMessage","setValueMessage","currentFile","setCurrentFile","fileImage","setfileImage","useReducer","MessageReduser","dialogsMessage","state","dispatch","fileReader","FileReader","onSubmit","data","type","text","post","readAsDataURL","onloadend","result","src","alt","for","value","onChange","e","target","file","files","accept","compose","RedirectLogin","connect","messagePage","arrayDialogMessage","DialogsMessage"],"sourceRoot":""}